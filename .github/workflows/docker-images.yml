name: Docker images

on:
  # Triggers the workflow only when a push affects specific files
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/docker-images.yml'
      - 'docker/**'
      - 'requirements/**'
      - 'scripts/**'
      - 'thirdparty/**'
  pull_request:
    branches: [ master ]
    paths:
      - '.github/workflows/docker-images.yml'
      - 'docker/**'
      - 'requirements/**'
      - 'scripts/**'
      - 'thirdparty/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  image-build-upload:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution: [ubuntu, fedora]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: meshrus
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        run:  docker build -f docker/${{matrix.distribution}}Dockerfile -t meshrus/meshlib-${{matrix.distribution}} . --progress=plain --no-cache
      
      - name: Testing image - prepare
        run: echo '::set-output id=$(docker create meshrus/meshlib-${{matrix.distribution}})'
        id: image

      - name: Testing image - copy repo
        run: docker cp . ${{steps.image.id}}:/home/MeshLib/
        
      - name: Testing image - commit container
        run: docker commit ${{steps.image.id}} debug/${{matrix.distribution}}
        
      - name: Testing image - run container
        run: docker run -it --rm --entrypoint sh debug/${{matrix.distribution}}
   
      - name: Testing image - prepare for build
        run: cd /home/MeshLib && cp -r /usr/local/lib/meshlib-thirdparty-lib/lib .
        
      - name: Testing image - build
        run: ./scripts/build_source.sh
        
      - name: Testing image - unit tests
        run: ./build/Release/bin/MRTest

      - name: Testing image - python tests
        run: |
          cd ./build/Release/bin
          python3 ./../../../scripts/run_python_test_script.py
          
      - name: Testing image - exit container
        run: exit

      - name: Remove debug image
        run: docker image rm debug/${{matrix.distribution}}
        
      - name: Push image
        run: docker push meshrus/meshlib-${{matrix.distribution}})
