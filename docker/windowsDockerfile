FROM mcr.microsoft.com/dotnet/framework/runtime:3.5-windowsservercore-ltsc2019

# Reset the shell.
SHELL ["cmd", "/S", "/C"]

# Set up environment to collect install errors.
# COPY Install.cmd C:\Temp\
# ADD https://aka.ms/vscollect.exe C:\Temp\collect.exe

# Install Node.js LTS
ADD https://nodejs.org/dist/v8.11.3/node-v8.11.3-x64.msi C:\Temp\node-install.msi
RUN start /wait msiexec.exe /i C:\Temp\node-install.msi /l*vx "%TEMP%\MSI-node-install.log" /qn ADDLOCAL=ALL

# Download channel for fixed install.
ARG CHANNEL_URL=https://aka.ms/vs/16/release/channel
ADD ${CHANNEL_URL} C:\Temp\VisualStudio.chman

# Install VS2019 Build Tools with the Microsoft.VisualStudio.Workload.VCTools workload with clang components.
RUN curl -SL --output vs_buildtools.exe https://aka.ms/vs/16/release/vs_buildtools.exe
RUN start /w vs_buildtools.exe --quiet --wait --norestart --nocache `
    --add Microsoft.VisualStudio.Workload.MSBuildTools `
    --installPath C:\vcbuildtools

# All required external packages for compilation
# COPY vcpkg C:\src\vcpkg

# Install choco
RUN powershell -ExecutionPolicy unrestricted -Command `
    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

# Needed for bootstrapper
RUN powershell -ExecutionPolicy unrestricted -Command Install-WindowsFeature Net-Framework-Core
RUN choco install wixtoolset --confirm

# Install git
RUN choco install git.install --confirm

# Install PowerShell Core
RUN choco install pwsh --confirm

# One drive connection
# COPY rclone1551 C:\src\rclone1551

# ntldd recursively finds
# COPY ntldd C:\src\ntldd

# These two fonts are needed for unit tests in the Docker image
# COPY fonts\*.ttf C:\Windows\Fonts\

# There is powershell on the server side.
ENTRYPOINT ["powershell.exe", "-NoLogo", "-ExecutionPolicy", "Bypass"]