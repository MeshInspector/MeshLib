name: Build and test Windows

on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string

jobs:
  windows-build-test:
    timeout-minutes: 40
    runs-on: windows-2019
    strategy:
      matrix:
        config: [Debug, Release]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Start container
        run: docker run -d --name meshlib-win --workdir C:\workspace\MeshLib\MeshLib -v ${{ github.workspace }}\..\..:C:\workspace meshrus/meshlib-windows:${{inputs.image_tag}} ping -t localhost

      - name: Build
        run: |
          docker exec meshlib-win C:\vcpkg\vcpkg.exe integrate install
          docker exec meshlib-win C:\Temp\vcbuildtools\\MSBuild\Current\Bin\MSBuild.exe source\MeshLib.sln -p:Configuration=${{ matrix.config }}

      - name: Unit Tests
        run: docker exec meshlib-win py -3 scripts\run_unit_test_script.py ${{ matrix.config }}

      - name: Python Tests
        run: docker exec -w C:\workspace\MeshLib\MeshLib\source\x64\${{ matrix.config }} meshlib-win py -3 ..\..\..\scripts\run_python_test_script.py

      - name: Archive files # https://github.com/actions/download-artifact#maintaining-file-permissions-and-case-sensitive-files
        if: ${{ github.event_name == 'push' }}
        run: tar -a -c -f MREDist_${{ matrix.config }}.zip ./source/x64/${{matrix.config}}

      - name: Upload Windows Binaries Archive
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          name: WindowsArchive
          path: MREDist_${{ matrix.config }}.zip
          retention-days: 1