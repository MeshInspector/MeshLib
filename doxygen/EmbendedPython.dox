namespace MR {

/** \page EmbendedPythonOverview Python overview

Python is one of the most popular and widely used programming language in scientific researches, machine learning, data analysis and advanced testing.\n

|     Distribution    | Python version |
|:-------------------:|:--------------:|
|     Windows x64     |      3.10      |
|    Ubuntu 20 x64    |       3.8      |
|    Ubuntu 22 x64    |      3.10      |
|    Fedora 35 x64    |       3.11     |
| pip install meshlib |    3.8 - 3.12  |

MeshLib library allows you to call python scripts directly from the command line or use particular functions by `from meshlib import mrmeshpy`.

\b Usage

On Windows: path to the directory that contains MeshLib python modules (mrmeshpy.pyd, mrmeshnumpy.pyd ...) should be added to python before importing the modules
\code
import sys
sys.path.append('path_to_modules_directory')
\endcode

MeshLib provides several usage options\n
1. Directly from system python
\code
from meshlib import mrmeshpy

try:
    mesh = mrmeshpy.loadMesh("mesh.stl")
except ValueError as e:
    print(e)
# ...
# some mesh modifications can be perform here
# ...
mrmeshpy.saveMesh(mesh, "mesh.ply")
\endcode
2. Run script from c++ code
\code
MR::runScript("script.py"); // or MR::runString( stringWithScript )
\endcode

\b Exposing

You can expose your c++ functions and classes to python
\code
#include "MRPython.h"
void pythonExample( float arg )
{
    doSomething(arg);
}

//init sould be called only once for each module
MR_INIT_PYTHON_MODULE( moduleName )

MR_ADD_PYTHON_FUNCTION( moduleName, examplePythonFunc, pythonExample);
\endcode

\b Functions
\c MeshLib/python_scripts folder contain scripts which could be used as examples for developers or testers. \b Python \b library allows to list all `mrmeshpy.*` functions with standart `print(dir(mrmeshpy))` call.
You can list all available python functuins by running `python MeshLib/python_scripts/functions_list.py`

\note Not all functions are available anytime, for example functions that triggers rendering are not available in direct python call, but available with executable run

*/

}