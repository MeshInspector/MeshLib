name: Build and test Fedora 39

on:
  workflow_call:
    inputs:
      docker_image_tag:
        required: true
        type: string
      app_version:
        required: true
        type: string
      UPLOAD_ARTIFACTS:
        required: true
        type: boolean

jobs:
  fedora-build-test:
    timeout-minutes: 40
    runs-on: ubuntu-latest
    container:
      image: meshlib/meshlib-fedora39:${{inputs.docker_image_tag}}
      options: --user root
    strategy:
      matrix:
        config: [Debug, Release]
        compiler: [Clang 17, GCC 13]
        include:
          - compiler: Clang 17
            cxx-compiler: /usr/bin/clang++-17
            c-compiler: /usr/bin/clang-17
          - compiler: GCC 13
            cxx-compiler: /usr/bin/g++
            c-compiler: /usr/bin/gcc
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install thirdparty libs
        run: |
          ln -s /usr/local/lib/meshlib-thirdparty-lib/lib ./lib
          ln -s /usr/local/lib/meshlib-thirdparty-lib/include ./include

      - name: Build
        run: ./scripts/build_source.sh
        env:
          MESHLIB_BUILD_RELEASE: ${{ fromJSON('["OFF", "ON"]')[matrix.config == 'Release'] }}
          MESHLIB_BUILD_DEBUG: ${{ fromJSON('["OFF", "ON"]')[matrix.config == 'Debug'] }}
          CMAKE_CXX_COMPILER: ${{ matrix.cxx-compiler }}
          MR_VERSION: ${{ inputs.app_version }}
          MR_USE_CPP_23: "ON"
          MR_CMAKE_OPTIONS: ${{ matrix.MR_CMAKE_OPTIONS }}

      - name: Collect Timings
        run: ./scripts/devops/collect_timing_logs.sh fedora39 ${{matrix.config}} "${{matrix.compiler}}"

      #Save timing in artifact
      - name: Upload Timings
        uses: actions/upload-artifact@v3
        with:
          name: Timing_Logs
          path: time_log/

      - name: Run Tests
        run: xvfb-run -a ./build/${{ matrix.config }}/bin/MeshViewer -hidden -noEventLoop

      - name: Unit Tests
        if: ${{ matrix.config == 'Debug' }}
        run: ./build/${{ matrix.config }}/bin/MRTest

      - name: Python Sanity Tests
        working-directory: ./build/${{ matrix.config }}/bin
        run: python3 ./../../../scripts/run_python_test_script.py -d '../test_python'

      - name: Configure AWS Credentials
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository}}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::259351611210:role/GitHubMeshLibAwsCredsRole
          aws-region: us-east-1

      - name: Copy autotest data from S3 Tests
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository}}
        run: aws s3 cp s3://data-autotest/test_data_29-dec-23 ./test_data --recursive

      - name: Python Regression Tests
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository}}
        working-directory: ./build/${{ matrix.config }}/bin
        run: python3 ./../../../scripts/run_python_test_script.py -d '../test_regression'

      - name: Create RPM
        if: ${{ matrix.config == 'Release' && matrix.compiler == 'Clang 17'}}
        run: ./scripts/distribution_rpm.sh ${{inputs.app_version}}
        env:
          MESHLIB_BUILD_RELEASE: ON
          MESHLIB_BUILD_DEBUG: OFF

      - name: Upload Fedora Developer Distribution
        if: ${{ matrix.config == 'Release' && matrix.compiler == 'Clang 17'}}
        uses: actions/upload-artifact@v3
        with:
          name: Distributives
          path: meshlib-dev.rpm
          retention-days: 1
