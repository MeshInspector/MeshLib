name: Windows Release by Tag

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Tag to build Windows Release from'
        required: true

jobs:
  config:
    runs-on: aws-micro
    env:
      vs19_vcpkg_version: "2024.10.21"
      vs22_vcpkg_version: "2025.04.09"
    outputs:
      app_version: ${{ steps.set.outputs.app_version }}
      release_tag: ${{ steps.set.outputs.release_tag }}
      windows_x64_config_matrix: ${{ steps.set.outputs.matrix }}
      full_config_build: "false"
      internal_build: "false"
      upload_test_artifacts: "false"
      nuget_build: "false"
      vs19_vcpkg_version: ${{ env.vs19_vcpkg_version }}
      vs22_vcpkg_version: ${{ env.vs22_vcpkg_version }}
    steps:
      - name: Set release config
        id: set
        run: |
          TAG="${{ github.event.inputs.release_tag || github.ref_name }}"
          APP_VERSION="${TAG#v}" # strip leading v
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "release_tag=$TAG" >> $GITHUB_OUTPUT

          # Minimal matrix: Release only
          MATRIX_FILE=".github/workflows/matrix/windows-release-config.json"
          MATRIX=$(jq -c . < "$MATRIX_FILE")
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

          jq \
            --arg vs19 "${{ env.vs19_vcpkg_version }}" \
            --arg vs22 "${{ env.vs22_vcpkg_version }}" \
            '(.include[] | select(.["vcpkg-version"]=="__VCPKG_VERSION_VS19__") | .["vcpkg-version"]) = $vs19
            | (.include[] | select(.["vcpkg-version"]=="__VCPKG_VERSION_VS22__") | .["vcpkg-version"]) = $vs22' \
            "$MATRIX_FILE" > tmp.json

          echo "matrix=$(jq -c . tmp.json)" >> $GITHUB_OUTPUT
