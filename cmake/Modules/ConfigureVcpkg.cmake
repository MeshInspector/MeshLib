function(find_vcpkg_root)
    IF(NOT DEFINED VCPKG_ROOT)
        IF(WIN32)
            set(VCPKG_PATH_FILE "$ENV{LOCALAPPDATA}/vcpkg/vcpkg.path.txt")
        ELSE()
            set(VCPKG_PATH_FILE "$ENV{HOME}/.vcpkg/vcpkg.path.txt")
        ENDIF()
        IF(EXISTS ${VCPKG_PATH_FILE})
            file(READ ${VCPKG_PATH_FILE} VCPKG_ROOT)
            set(VCPKG_ROOT ${VCPKG_ROOT} PARENT_SCOPE)
            IF(DEFINED ENV{VCPKG_ROOT})
                message(WARNING "vcpkg integration file precedes the VCPKG_ROOT environment variable. To override this, set the VCPKG_ROOT CMake variable")
            ENDIF()
        ELSEIF(DEFINED ENV{VCPKG_ROOT})
            set(VCPKG_ROOT $ENV{VCPKG_ROOT} PARENT_SCOPE)
        ENDIF()
    ENDIF()
endfunction()

IF(WIN32)
    set(MESHLIB_USE_VCPKG_DEFAULT ON)
ELSE()
    set(MESHLIB_USE_VCPKG_DEFAULT OFF)
ENDIF()
option(MESHLIB_USE_VCPKG "Use the vcpkg package manager" ${MESHLIB_USE_VCPKG_DEFAULT})
IF(MESHLIB_USE_VCPKG)
    IF(NOT DEFINED CMAKE_TOOLCHAIN_FILE)
        find_vcpkg_root()
        IF(DEFINED VCPKG_ROOT)
            message(STATUS "Found vcpkg: ${VCPKG_ROOT}")
            set(CMAKE_TOOLCHAIN_FILE "${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake" CACHE PATH "CMake toolchain file")
        ELSE()
            message(FATAL_ERROR "vcpkg not found")
        ENDIF()
    ENDIF()

    IF(NOT DEFINED VCPKG_TARGET_TRIPLET)
        # TODO: triplet for Linux and macOS
        set(VCPKG_TARGET_TRIPLET "x64-windows-meshlib" CACHE STRING "vcpkg target triplet")
    ENDIF()
ELSEIF(MESHLIB_USE_VCPKG_DEFAULT)
    message(WARNING "vcpkg is disabled explicitly")
ENDIF()
