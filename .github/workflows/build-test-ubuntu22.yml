name: Build and test Ubuntu22

on:
  workflow_call:
    inputs:
      docker_image_tag:
        required: true
        type: string
      app_version:
        required: true
        type: string
      UPLOAD_ARTIFACTS:
        required: true
        type: boolean

jobs:
  ubuntu22-build-test:
    timeout-minutes: 40
    runs-on: ubuntu-latest
    container:
      image: meshlib/meshlib-ubuntu22:${{inputs.docker_image_tag}}
      options: --user root
    strategy:
      matrix:
        config: [ Debug, Release ]
        compiler: [ Clang 14, GCC 12 ]
        include:
          - compiler: Clang 14
            cxx-compiler: /usr/bin/clang++-14
            c-compiler: /usr/bin/clang-14
            use-cpp-23: "OFF"
          - compiler: GCC 12
            cxx-compiler: /usr/bin/g++-12
            c-compiler: /usr/bin/gcc-12
            use-cpp-23: "ON"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install thirdparty libs
        run: |
          ln -s /usr/local/lib/meshlib-thirdparty-lib/lib ./lib
          ln -s /usr/local/lib/meshlib-thirdparty-lib/include ./include

      - name: Build
        run: ./scripts/build_source.sh
        env:
          MESHLIB_BUILD_RELEASE: ${{ fromJSON('["OFF", "ON"]')[matrix.config == 'Release'] }}
          MESHLIB_BUILD_DEBUG: ${{ fromJSON('["OFF", "ON"]')[matrix.config == 'Debug'] }}
          CMAKE_CXX_COMPILER: ${{ matrix.cxx-compiler }}
          # not realy needed
          CMAKE_C_COMPILER: ${{ matrix.c-compiler }}
          MR_VERSION: ${{ inputs.app_version }}
          MR_USE_CPP_23: ${{ matrix.use-cpp-23 }}

      - name: Collect Timings
        run: ./scripts/devops/collect_timing_logs.sh ubuntu22 ${{matrix.config}} "${{matrix.compiler}}"

      #Save timing in artifact
      - name: Upload Timings
        uses: actions/upload-artifact@v3
        with:
          name: Timing_Logs
          path: time_log/

      - name: Run Tests
        run: xvfb-run -a ./build/${{ matrix.config }}/bin/MeshViewer -hidden -noEventLoop

      - name: Unit Tests
        run: ./build/${{ matrix.config }}/bin/MRTest

      - name: Python Tests
        working-directory: ./build/${{ matrix.config }}/bin
        run: python3 ./../../../scripts/run_python_test_script.py

      - name: Create Deb
        if: ${{ inputs.UPLOAD_ARTIFACTS && matrix.compiler == 'Clang 14' && matrix.config == 'Release'}}
        env:
          MESHLIB_BUILD_RELEASE: ON
          MESHLIB_BUILD_DEBUG: OFF
        run: |
          ./scripts/distribution.sh ${{inputs.app_version}}
          mv ./distr/meshlib-dev.deb meshlib-ubuntu22-dev.deb

      - name: Upload Ubuntu Developer Distribution
        if: ${{ inputs.UPLOAD_ARTIFACTS && matrix.compiler == 'Clang 14' && matrix.config == 'Release'}}
        uses: actions/upload-artifact@v3
        with:
          name: Distributives
          path: meshlib-ubuntu22-dev.deb
          retention-days: 1